<project name="Avahi4J" default="usage">
	
	<property file="build.properties"/>
	
	<!-- 
		destdir property is used when installing avahi4j.jar, JNIlib and javadoc
		It is a prefix that will be added before install paths
	-->
	<condition property="destdir" value="${DESTDIR}" else="">
		<isset property="DESTDIR"/>
	</condition>

	<path id="build.classpath">
		<pathelement location="${project.src}"/>
		<fileset dir="${project.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
		<pathelement location="${project.classes}" />
		<fileset dir="${project.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>

	
	<!-- default target that displays usage -->
	<target name="usage">
		<echo message=""/>
		<echo message="Avahi4J"/>
		<echo message=""/>
		<echo message="Available targets :"/>
		<echo message=""/>
		<echo message=" all :              Build the JAR file and JNI library"/>
		<echo message=" all-debug :        Build the JAR file and JNI library with debug statments"/>
		<echo message=" jar :              Build a JAR file with the Avahi4J classes"/>
		<echo message=" jar-debug :        Build a JAR file with the Avahi4J classes (compiled with debug information)"/>
		<echo message=" javadoc:           Build the Avahi4J Java documentation"/>
		<echo message=" jar-src :          Build a JAR file with the Avahi4J classes and sources"/>
		<echo message=" jnilib :           Build the JNI library (libavahi4j.so)"/>
		<echo message=" jnilib-debug :     Build the JNI library with debug output (libavahi4j.so)"/>
		<echo message=" install:           Install avahi4j.jar and the JNI lib (must be root)"/>
		<echo message=" uninstall:         Uninstall avahi4j.jar and the JNI lib (must be root)"/>
		<echo message=" install-doc:       Build and install JavaDoc (must be root)"/>
		<echo message=" uninstall-doc:     Uninstall JavaDoc (must be root)"/>
		<echo message=" clean:             Remove all build generated files"/>
		<echo message=" ********************************************************" />
		<echo message=" test-publish:      Runs a service publishing test application"/>
		<echo message=" test-browse:       Runs a service browser test application"/>
		<echo message="" />
		<echo message=""/>
		<echo message=""/>
		<echo message="The 'install' target will copy avahi4j.jar in ${platform.standard.jar.location}, "/>
        <echo message="the JNI library in ${platform.standard.jni.location} and the JavaDoc in ${platform.standard.javadoc.location}"/>
	</target>
	
	<target name="init">
		<mkdir dir="${project.classes}"/>
	</target>
	
	<target name="all" depends="jnilib,jar"/>

    <target name="all-debug" depends="jnilib-debug,jar-debug"/>

	<target name="jnilib-debug" depends="init">
		<exec executable="make" failonerror="true">
		        <env key="DEBUG" value="1"/>
		        <arg line="-C ${project.src}" />
		</exec>
		<move file="${project.src}/libavahi4j.so" tofile="${project.dir}/libavahi4j.so" />
	</target>
	
	<target name="jnilib" depends="init">
		<exec executable="make" failonerror="true">
			<arg line="-C ${project.src}" />
		</exec>
		<copy file="${project.src}/libavahi4j.so" tofile="${project.dir}/libavahi4j.so" />
	</target>

	<target name="install">
		<mkdir dir="${destdir}${platform.standard.jar.location}"/>
		<mkdir dir="${destdir}${platform.standard.jni.location}"/>
		<copy file="${project.dir}/${project.jni.file}" tofile="${destdir}${platform.standard.jni.location}/${project.jni.file}" />
		<copy file="${project.dir}/${project.jar.file}" tofile="${destdir}${platform.standard.jar.location}/${project.jar.file}" />
<!--		<copy file="${project.dir}/${project.rsrc}/avahi4j.png" tofile="${destdir}${platform.standard.icons.location}/avahi4j.png" />
		<copy file="${project.dir}/${project.rsrc}/avahi4j-48x48.png" tofile="${destdir}${platform.standard.icons.location}/avahi4j-48x48.png" />
-->
	</target>
	<target name="uninstall">
		<delete file="${destdir}${platform.standard.jar.location}/${project.jar.file}" />
		<delete file="${destdir}${platform.standard.jni.location}/${project.jni.file}" />
<!--		<delete file="${destdir}${platform.standard.icons.location}/avahi4j.png" />
		<delete file="${destdir}${platform.standard.icons.location}/avahi4j-48x48.png" />
-->
	</target>

	<target name="install-doc" depends="javadoc">
		<copy todir="${destdir}${platform.standard.javadoc.location}">
                	<fileset dir="${project.javadoc.dir}"/>
                </copy>
	</target>

	<target name="uninstall-doc">
		<delete dir="${destdir}${platform.standard.javadoc.location}" />
	</target>
	
	<target name="compile" depends="init">
		<javac srcdir="${project.src}" destdir="${project.classes}" deprecation="on" source="${source}" debug="off">
			<classpath refid="build.classpath"/>
			<include name="**/*.java"/>
			<exclude name="**/package-info.java" />
		</javac>
	</target>

	<target name="compile-debug" depends="init">
		<javac srcdir="${project.src}" destdir="${project.classes}" deprecation="on" source="${source}" debug="on">
			<classpath refid="build.classpath"/>
			<include name="**/*.java"/>
			<exclude name="**/package-info.java" />
		</javac>
	</target>

	<target name="jar" depends="compile">
		<jar jarfile="${project.dir}/${project.jar.file}">
			<manifest>
				<attribute name="Main-Class" value="${project.example.servicepublish}"/>
			</manifest>
			<fileset dir="${project.classes}">
				<include name="**"/>
			</fileset>
			<fileset dir="${project.dir}">
				<include name="${project.rsrc}/**" />
			</fileset>
		</jar>
	</target>
	
	<target name="jar-debug" depends="compile-debug">
		<jar jarfile="${project.dir}/${project.jar.file}">
		        <manifest>
				<attribute name="Main-Class" value="${project.example.servicepublish}"/>
			</manifest>
			<fileset dir="${project.classes}">
				<include name="**"/>
			</fileset>
			<fileset dir="${project.dir}">
				<include name="${project.rsrc}**" />
			</fileset>
		</jar>
	</target>

	<target name="jar-src" depends="compile">
		<jar jarfile="${project.dir}/${project.jar.file}">
			<manifest>
				<attribute name="Main-Class" value="${project.example.servicepublish}"/>
			</manifest>
			<fileset dir="${project.classes}">
				<include name="**"/>
			</fileset>
			<fileset dir="${project.src}">
				<include name="**"/>
				<exclude name="**/package-info.java" />
			</fileset>
			<fileset dir="${project.dir}">
				<include name="${project.rsrc}/**" />
			</fileset>
		</jar>
	</target>
	
	<target name="javadoc">
		<javadoc sourcepath="${project.src}" packagenames="avahi4j.*" destdir="${project.javadoc.dir}" public="true" use="true">
		</javadoc>
	</target>
	
	<target name="test-publish" depends="jar,jnilib">
		<java classname="${project.example.servicepublish}" fork="true" failonerror="true">
			<classpath>
				<pathelement location="${project.jar.file}"/>
			</classpath>
			<jvmarg value="-Djava.library.path=."/>
		</java>
	</target>
	
	<target name="test-browse" depends="jar,jnilib">
		<java classname="${project.example.servicebrowser}" fork="true" failonerror="true">
			<classpath>
				<pathelement location="${project.jar.file}"/>
			</classpath>
			<jvmarg value="-Djava.library.path=."/>
		</java>
	</target>
	
	<target name="clean">
		<exec executable="make">
			<arg line="-C ${project.src} clean" />
		</exec>
		<delete file="${project.dir}/${project.jar.file}" />
		<delete file="${project.dir}/${project.jni.file}" />
		<delete dir="${project.classes}"/>
		<delete dir="${project.javadoc.dir}"/>
	</target>
</project>
